//Htmlcode
<!DOCTYPE html>
<html>
<head>
  <title>Health App</title>
</head>
<body>
  <script src="/socket.io/socket.io.js"></script>
  <script src="client.js"></script>
</body>
</html>

//Clientcode
const socket = io('https://localhost:3000');

// send health data to server
const sendHealthData = (data) => {
  socket.emit('health-data', data);
}

// listen for confirmation from server
socket.on('health-data-ack', (data) => {
  console.log('Received health-data-ack from server:', data);
});

// Call sendHealthData function with health data
sendHealthData({
  vital_signs: {
    heart_rate: 80,
    blood_pressure: '120/80', // Enclose blood pressure in quotes to keep it as a string
    temperature: 98.6
  },
  medication_adherence: {
    medication_1: true,
    medication_2: false
  },
  dietary_habits: {
    breakfast: true,
    lunch: true,
    dinner: false
  }
});

//Server code
const express = require('express');
const fs = require('fs');
const app = express();
const https = require('https');
const io = require('socket.io');

const options = {
  key: fs.readFileSync('server.key'),
  cert: fs.readFileSync('server.cert')
};

const server = https.createServer(options, app); // Create HTTPS server

server.listen(3000, () => {
  console.log('https server listening on port 3000');
});

const socketServer = io.listen(server); // Pass HTTP server instance to Socket.io

socketServer.on('connection', (socket) => {
  console.log('a user connected');

  socket.on('disconnect', () => {
    console.log('user disconnected');
  });

  socket.on('health-data', (data) => {
    // handle health data received from client
    console.log('Received health data:', data);
    // Send acknowledgment back to the client
    socket.emit('health-data-ack', 'Health data received successfully');
  });

});
